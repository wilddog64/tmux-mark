#!/usr/bin/env bash

TEST_SESSION="test_tmux_mark"
TEST_TMUX_CONF="/tmp/tmux_mark_test.conf"
MARK_FILE="$HOME/.tmux-marks.json"
PASS_COUNT=0
FAIL_COUNT=0

# Helper functions for test logging
pass() {
    echo "PASS: $1"
    ((PASS_COUNT++))
}
fail() {
    echo "FAIL: $1"
    ((FAIL_COUNT++))
}

# Step 1: Create a temporary tmux configuration file
echo "Creating temporary tmux configuration for testing..."

cat > "$TEST_TMUX_CONF" <<EOL
# Load the tmux-mark plugin
run-shell ~/.tmux/tmux-mark/tmux-mark.tmux

# Test-specific keybindings
unbind m
unbind ]
unbind [
unbind M
bind m run-shell "~/.tmux/tmux-mark/scripts/add_mark.sh"
bind ] run-shell "~/.tmux/tmux-mark/scripts/jump_next.sh"
bind [ run-shell "~/.tmux/tmux-mark/scripts/jump_prev.sh"
bind M run-shell "~/.tmux/tmux-mark/scripts/clear_marks.sh"

# Minimal settings for testing
set -g status off
EOL

# Ensure clean test environment
tmux kill-session -t "$TEST_SESSION" 2>/dev/null
rm -f "$MARK_FILE"

# Test 1: Verify Visual Indicators Are Applied
echo "Running Test 1: Verify visual indicators are applied..."
expect <<EOF
spawn tmux -f "$TEST_TMUX_CONF" new-session -d -s "$TEST_SESSION"
sleep 1
send "tmux copy-mode\r"
sleep 1
send "tmux send-keys -t $TEST_SESSION m\r"
expect {
    "Mark added at*" {
        pass "Visual indicator applied when adding a mark."
    }
    timeout {
        fail "Visual indicator not applied when adding a mark."
    }
}
EOF

# Test 2: Verify Marks Persist Across Sessions
echo "Running Test 2: Verify marks persist across sessions..."
expect <<EOF
# Add a mark
send "tmux copy-mode\r"
send "tmux send-keys -t $TEST_SESSION m\r"
expect {
    "Mark added at*" {
        pass "Mark added successfully for persistence test."
    }
    timeout {
        fail "Failed to add mark for persistence test."
    }
}

# Exit session
send "tmux kill-session -t $TEST_SESSION\r"
sleep 1

# Restart session
spawn tmux -f "$TEST_TMUX_CONF" new-session -d -s "$TEST_SESSION"
log_user 1   # Enable detailed logging
sleep 1

# Verify marks are restored
send "tmux copy-mode\r"
expect {
    "Mark added at*" {
        pass "Marks persisted and restored across sessions."
    }
    timeout {
        fail "Marks did not persist across sessions."
    }
}
EOF

# Test 3: Verify Clearing Marks Removes Visual Indicators
echo "Running Test 3: Verify clearing marks removes visual indicators..."
expect <<EOF
send "tmux copy-mode\r"
send "tmux send-keys -t $TEST_SESSION m\r"
send "tmux send-keys -t $TEST_SESSION M\r"
expect {
    "All marks cleared*" {
        pass "Clearing marks removed visual indicators."
    }
    timeout {
        fail "Clearing marks did not remove visual indicators."
    }
}
EOF

# Test 4: Fail Case - No Marks to Navigate
echo "Running Test 4: Fail case - No marks to navigate..."
expect <<EOF
send "tmux send-keys -t $TEST_SESSION ]\r"
expect {
    "No marks found*" {
        pass "Correctly handled navigation when no marks exist."
    }
    timeout {
        fail "Navigation failed to handle empty marks."
    }
}
EOF

# Cleanup
echo "Cleaning up test session and temporary configuration..."
tmux kill-session -t "$TEST_SESSION" 2>/dev/null
rm -f "$TEST_TMUX_CONF" "$MARK_FILE"

# Final Report
echo "---------------------------------------"
echo "Test Suite Completed."
echo "Passed: $PASS_COUNT"
echo "Failed: $FAIL_COUNT"
echo "---------------------------------------"

if [ $FAIL_COUNT -eq 0 ]; then
    echo "All tests passed successfully!"
    exit 0
else
    echo "$FAIL_COUNT test(s) failed."
    exit 1
fi
